name: Rust tests

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: Install package and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install -r requirements.txt
        pip install . -v
    - name: Run tests with pytest
      run: |
        # go back a directory so it uses the installed pyspinw
        # rather than the local repo folder
        # and get the examples which need to be local
        # TODO: better package structure so we don't
        # have to do this
        cd ..
        cp -r pySpinW/examples .
        # `pytest -m rust` only runs tests decorated @pytest.mark.rust
        # `--runxfail` means 'expect xfail tests to pass' - the Rust tests
        # are set to xfail if the Rust module is not available
        python -m pytest pySpinW/tests --runxfail -m rust 
